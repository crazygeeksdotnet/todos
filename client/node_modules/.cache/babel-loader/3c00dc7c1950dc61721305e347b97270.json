{"ast":null,"code":"var _jsxFileName = \"/var/projects/js/opensource/todos/client/src/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport AddTodo from './components/AddTodo';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    addTodo(formData).then(({\n      status,\n      data\n    }) => {\n      if (status !== 201) {\n        throw new Error(\"Error! Todo not saved\");\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error(\"Error! Todo not updated\");\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error(\"Error! Todo not deleted\");\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"My Todos\"), /*#__PURE__*/React.createElement(AddTodo, {\n    saveTodo: handleSaveTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), todos.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo._id,\n    updateTodo: handleUpdateTodo,\n    deleteTodo: handleDeleteTodo,\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/var/projects/js/opensource/todos/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","AddTodo","getTodos","addTodo","updateTodo","deleteTodo","App","todos","setTodos","fetchTodos","then","data","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","Error","handleUpdateTodo","todo","handleDeleteTodo","_id","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,EAAwCC,UAAxC,QAA0D,OAA1D;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAU,EAAV,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAY;AAC7BP,IAAAA,QAAQ,GACPQ,IADD,CACM,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA;AAAF;AAAR,KAAD,KAAwCC,QAAQ,CAACD,KAAD,CADtD,EAECK,KAFD,CAEQC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFvB;AAGD,GAJD;;AAMA,QAAMG,cAAc,GAAG,CAACC,CAAD,EAAqBC,QAArB,KAA+C;AACpED,IAAAA,CAAC,CAACE,cAAF;AACAhB,IAAAA,OAAO,CAACe,QAAD,CAAP,CACGR,IADH,CACQ,CAAC;AAAEU,MAAAA,MAAF;AAAUT,MAAAA;AAAV,KAAD,KAAsB;AAC1B,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,KANH,EAOGK,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,GAVD;;AAYA,QAAMS,gBAAgB,GAAIC,IAAD,IAAuB;AAC9CnB,IAAAA,UAAU,CAACmB,IAAD,CAAV,CACGb,IADH,CACQ,CAAC;AAAEU,MAAAA,MAAF;AAAUT,MAAAA;AAAV,KAAD,KAAsB;AAC1B,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,KANH,EAOGK,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,GATD;;AAWA,QAAMW,gBAAgB,GAAIC,GAAD,IAAuB;AAC9CpB,IAAAA,UAAU,CAACoB,GAAD,CAAV,CACGf,IADH,CACQ,CAAC;AAAEU,MAAAA,MAAF;AAAUT,MAAAA;AAAV,KAAD,KAAsB;AAC1B,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAClB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACD,KANH,EAOGK,KAPH,CAOSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPhB;AAQD,GATD;;AAWA,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEG,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGT,KAAK,CAACmB,GAAN,CAAWH,IAAD,iBACT,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACE,GADZ;AAEE,IAAA,UAAU,EAAEH,gBAFd;AAGE,IAAA,UAAU,EAAEE,gBAHd;AAIE,IAAA,IAAI,EAAED,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CADF;AAcD,CA7DD;;AA+DA,eAAejB,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport TodoItem from './components/TodoItem'\nimport AddTodo from './components/AddTodo'\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API'\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n\n  const fetchTodos = (): void => {\n    getTodos()\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n    .catch((err: Error) => console.log(err))\n  }\n\n  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n    e.preventDefault()\n    addTodo(formData)\n      .then(({ status, data }) => {\n        if (status !== 201) {\n          throw new Error(\"Error! Todo not saved\")\n        }\n        setTodos(data.todos)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not updated\")\n        }\n        setTodos(data.todos)\n      })\n      .catch(err => console.log(err))\n  }\n  \n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not deleted\")\n        }\n        setTodos(data.todos)\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <main className='App'>\n      <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  )\n}\n\nexport default App\n  "]},"metadata":{},"sourceType":"module"}